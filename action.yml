name: "Install AWS CLI v2"
description: "Install AWS CLI v2"

branding:
  icon: "cloud"
  color: "blue"

inputs:
  version:
    description: "Version to install"
    required: false
    default: ""

outputs:
  version:
    description: "Installed version"
    value: ${{ steps.install.outputs.version }}

runs:
  using: "composite"
  steps:
    - id: prepare
      run: |
        SETUP_AWS_CLI_VERSION="${{ inputs.version }}"
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          SETUP_AWS_CLI_VERSION="${{ github.event.inputs.version }}"
        fi
        if [ "${SETUP_AWS_CLI_VERSION}" == "" ]; then
          echo "=> aws cli version to install => latest"
        else
          echo "=> aws cli version to install => ${SETUP_AWS_CLI_VERSION}"
          SETUP_AWS_CLI_VERSION="-${SETUP_AWS_CLI_VERSION}"
        fi
        echo "SETUP_AWS_CLI_VERSION=${SETUP_AWS_CLI_VERSION}" >> $GITHUB_ENV
      shell: bash
    - id: install
      run: |
        mkdir tmp-action-install-aws-cli && cd tmp-action-install-aws-cli
        if [ "${{ runner.os }}" == "Linux" ]; then
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64${{ env.SETUP_AWS_CLI_VERSION }}.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          if [ "`which aws`" != "" ]; then
            sudo ./aws/install --update
          else
            sudo ./aws/install
          fi
        elif [ "${{ runner.os }}" == "macOS" ]; then
          curl "https://awscli.amazonaws.com/AWSCLIV2${{ env.SETUP_AWS_CLI_VERSION }}.pkg" -o "AWSCLIV2.pkg"
          sudo installer -pkg ./AWSCLIV2.pkg -target /
        else
          cd .. && rm -rf tmp-install-setup-aws-cli
          INSTALL_ERROR_MESSAGE="operating system ${{ runner.os }} is not supported"
          echo "=> ${INSTALL_ERROR_MESSAGE}"
          echo "::error::${INSTALL_ERROR_MESSAGE}"
          exit 1
        fi
        cd .. && rm -rf tmp-install-setup-aws-cli
        INSTALLED_AWS_CLI_VERSION="`aws --version`"
        echo "=> aws cli version installed  => ${INSTALLED_AWS_CLI_VERSION}"
        echo "::set-output name=version::${INSTALLED_AWS_CLI_VERSION}"
      shell: bash
